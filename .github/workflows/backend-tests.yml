name: CI Tests and Deployment

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configuration Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 3 : Construire et Pousser les images avec cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/backend/Dockerfile
          push: true
          tags: your-dockerhub-username/backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/frontend/Dockerfile
          push: true
          tags: your-dockerhub-username/frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # Étape 4 : Lancer les conteneurs Docker pour les tests
      - name: Run Backend Tests
        run: |
          docker run --rm your-dockerhub-username/backend:latest pytest --junitxml=backend-report.xml

      - name: Upload Backend Test Report
        uses: actions/upload-artifact@v3
        with:
          name: backend-report
          path: backend-report.xml

      - name: Run Frontend Tests
        run: |
          docker run --rm your-dockerhub-username/frontend:latest yarn test --json --outputFile=frontend-report.json

      - name: Upload Frontend Test Report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-report
          path: frontend-report.json

      # Étape 5 : Lancer le linting
      - name: Run ESLint
        run: |
          docker run --rm your-dockerhub-username/frontend:latest yarn lint
